@import "../bower_components/normalize-scss/normalize.css";
@import "../bower_components/typeplate-starter-kit/css/typeplate.css";

p+p {
    text-indent: 0;
    margin-top: 0;
}

p {
    max-width: 80ch;
    margin-left: 0;
    margin-right: auto;
}

ul, ol {
    max-width: 80ch;
    margin-left: 0;
    margin-right: auto;
}

/**
 * BOX-SIZING
 */

*,
*:before,
*:after {
    box-sizing: border-box;
    transition-duration: 0.2s;
    transition-property: all;/*opacity, transform, color, background-color, border-color, z-index, background-image;*/
    transition-timing-function: ease;
}

/**
 * GRIDS
 */

.grid {
    display: block;
    text-align: justify;
    font-size: 0;
    position: relative;

    > * {
        display: inline-block;
        width: 100%;
        font-size: 1rem;
        text-align: left;
    }

    &:after {
        display: table;
        width: 100%;
    }
}

@define-mixin grid_r $col, $width {
    @media (min-width: $(width)px) {
        .grid-$(col)-$(width) {
            & > * {
                width: calc(100 / $col)%;
            }
        }
    }
}

@define-mixin grid $col {
    .grid-$(col) {
        & > * {
            width: calc(100 / $col)%;
        }
    }
}

@mixin grid 2;
@mixin grid 4;
@mixin grid 8;
@mixin grid_r 2, 400;
@mixin grid_r 2, 640;
@mixin grid_r 2, 800;
@mixin grid_r 4, 400;
@mixin grid_r 4, 800;
@mixin grid_r 8, 800;
@mixin grid_r 8, 1024;
@mixin grid_r 8, 1280;

/**
 * GENERAL
 */

img {
    max-width: 100%;
}
body {
    font-family: 'San Francisco', 'Helvetica', 'Trebuchet MS', Arial, sans-serif;
}

/**
 * PACE (automatic pre-loader thingy)
 */

.pace {
    pointer-events: none;
    user-select: none;
    transition: all 1s ease;
    .pace-progress {
        background: #2299dd;
        position: fixed;
        z-index: 2000;
        top: 0;
        right: 100%;
        width: 100%;
        height: 2px;
        transition: all 1s ease;
    }
}

.pace-inactive {
    opacity: 0;
}

.pace-active {
    opacity: 1;
}

/**
 * App code
 */

$gold: #BC7D37;
$blue: #1F2D4D;

body {
    // background-color: $gold;
    color: white;
    display: flex;
    height: 100vh;

    .container {
        display: flex;
        flex: 1;
        flex-direction: column;
        overflow: hidden;

        .info {
            &:before {
                // content: 'soon:';
                display: inline-block;
                // color: red;
            }
            // background-color: $gold;
            flex: 1;
            display: flex;
            padding-right: 1rem;
            h5 {
                color: white;
                flex: 1;
                text-align: right;
                line-height: 3em;
            }

            // max-height: 3em;
            // text-align: right;
            /* &, & > * {
                color: #555;
            } */
        }

        .talk {
            flex:8;

            @for $i from 1 to 6 {
                h$(i) {
                    font-size: calc(15 - ($i - 1) * 2)vw;
                }
            }

            @media (min-width: 800px){
                @for $i from 1 to 6 {
                    h$(i) {
                        font-size: calc(10 - ($i - 1) * 2)vw !important;
                    }
                }
            }

            h1,h2,h3,h4,h5,h6 {
                color: #fff;
                transform: translateX(-100%);

                & > span {
                    // background-color: $blue;
                    display: inline-block;
                    padding: 9 .25rem;
                }

                @for $i from 1 to 20 {
                    &:nth-child($i) {
                        transition-delay: calc($i*.1)s !important;
                    }
                }
            }
        }

        &.fadeout {
            .talk {
                h1,h2,h3,h4,h5,h6 {
                    transition: all .5s ease-out;
                    opacity: 0;
                    transform: translateX(-100%);
                }
            }
        }

        &.fadein {
            .talk {
                h1,h2,h3,h4,h5,h6 {
                    transition: all 1s ease-out;
                    opacity: 1;
                    transform: translateX(0px);
                }
            }
        }

        .next {
            &:before {
                // content: 'soon:';
                display: inline;
                // color: red;
            }
            padding-right: 1rem;
            // background-color: $gold;
            flex: 1;
            max-height: 3em;
            text-align: right;
            h1,h2,h3,h4,h5,h6 {
                // display: inline-block;
                color: #fff;
            }
            /* &, & > * {
                color: #555;
            } */
        }
    }
}

@keyframes fadeInRight {
    0% {
        opacity: 0;
        transform: translate(-100%);
    }
    100% {
        opacity: 1;
        transform: translate(0);
    }
}